name: Deploy Docusaurus to GitHub Pages

on:
  workflow_run:
    workflows: ["Build and Test Docusaurus Website"]
    branches: [main]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-if-tests-passed:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Check test results
      run: |
        echo "🔍 Checking test workflow results..."
        echo "Test workflow conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Event name: ${{ github.event_name }}"
        
        if [ "${{ github.event.workflow_run.conclusion }}" = "success" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "✅ Tests passed or manual trigger - proceeding with deployment"
        else
          echo "❌ Tests failed - deployment cancelled"
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: deploy-if-tests-passed
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Sync content from specification repo
      run: |
        echo "🔄 Syncing content from specification repo..."
        
        # Create sync directories
        mkdir -p temp-sync
        
        # Try to download specification content (continue build even if this fails)
        echo "📥 Downloading specification content..."
        curl -f -H "Accept: application/vnd.github.v3.raw" \
             -o temp-sync/specification.md \
             https://api.github.com/repos/UAICP/uaicp_specification/contents/docs/specification/specification.md || echo "⚠️ Could not download specification.md"
        
        curl -f -H "Accept: application/vnd.github.v3.raw" \
             -o temp-sync/mcp-integration.md \
             https://api.github.com/repos/UAICP/uaicp_specification/contents/docs/integration-guides/MCP-INTEGRATION.md || echo "⚠️ Could not download mcp-integration.md"
        
        curl -f -H "Accept: application/vnd.github.v3.raw" \
             -o temp-sync/use-cases.md \
             https://api.github.com/repos/UAICP/uaicp_specification/contents/docs/examples/use-cases.md || echo "⚠️ Could not download use-cases.md"
        
        # Process downloaded content if available
        if [ -f temp-sync/specification.md ]; then
          echo "✅ Processing specification.md..."
          # Add Docusaurus front matter to specification
          echo "---" > docs/specification/full-specification.md
          echo "sidebar_position: 4" >> docs/specification/full-specification.md
          echo "---" >> docs/specification/full-specification.md
          echo "" >> docs/specification/full-specification.md
          cat temp-sync/specification.md >> docs/specification/full-specification.md
        else
          echo "ℹ️ Using existing specification content"
        fi
        
        # Cleanup
        rm -rf temp-sync
        echo "✅ Content sync completed"
    
    - name: Build website
      run: |
        echo "🏗️ Building Docusaurus website..."
        npm run build
        
        # Ensure CNAME file is in the build output for custom domain
        echo "uaicp.org" > build/CNAME
        echo "✅ Build completed with custom domain configured"
        
        # Debug: Show build directory contents
        echo "📁 Build directory contents:"
        ls -la build/
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Output deployment URL
      run: |
        echo "🚀 Site deployed to: ${{ steps.deployment.outputs.page_url }}"
        echo "🌐 Custom domain: https://uaicp.org"
