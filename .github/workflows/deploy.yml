name: Deploy Docusaurus to GitHub Pages

on:
  workflow_run:
    workflows: ["Build and Test Docusaurus Website"]
    branches: [main]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-if-tests-passed:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Check test results
      run: |
        echo "🔍 Checking test workflow results..."
        echo "Test workflow conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Event name: ${{ github.event_name }}"
        
        if [ "${{ github.event.workflow_run.conclusion }}" = "success" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "✅ Tests passed or manual trigger - proceeding with deployment"
        else
          echo "❌ Tests failed - deployment cancelled"
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: deploy-if-tests-passed
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Sync content from specification repo
      run: |
        echo "🔄 Syncing content from specification repo..."
        
        # Create sync directories
        mkdir -p temp-sync
        
        # Download specification content (fail build if any download fails)
        echo "📥 Downloading specification content..."
        
        echo "📄 Downloading main specification..."
        curl -f -H "Accept: application/vnd.github.v3.raw" \
             -o temp-sync/specification.md \
             https://api.github.com/repos/UAICP/uaicp_specification/contents/docs/specification/specification.md
        
        echo "📄 Downloading MCP integration guide..."
        curl -f -H "Accept: application/vnd.github.v3.raw" \
             -o temp-sync/mcp-integration.md \
             https://api.github.com/repos/UAICP/uaicp_specification/contents/docs/integration-guides/MCP-INTEGRATION.md
        
        echo "📄 Downloading use cases..."
        curl -f -H "Accept: application/vnd.github.v3.raw" \
             -o temp-sync/use-cases.md \
             https://api.github.com/repos/UAICP/uaicp_specification/contents/docs/examples/use-cases.md
        
        # Process downloaded content - all files must exist or build fails
        echo "✅ Processing specification.md..."
        # Add Docusaurus front matter to specification
        echo "---" > docs/specification/full-specification.md
        echo "sidebar_position: 4" >> docs/specification/full-specification.md
        echo "title: 'Complete UAICP Specification'" >> docs/specification/full-specification.md
        echo "---" >> docs/specification/full-specification.md
        echo "" >> docs/specification/full-specification.md
        cat temp-sync/specification.md >> docs/specification/full-specification.md
        
        echo "✅ Processing MCP integration guide..."
        # Add Docusaurus front matter to MCP integration
        echo "---" > docs/integration-guides/mcp-integration-complete.md
        echo "sidebar_position: 2" >> docs/integration-guides/mcp-integration-complete.md
        echo "title: 'Complete MCP Integration Guide'" >> docs/integration-guides/mcp-integration-complete.md
        echo "---" >> docs/integration-guides/mcp-integration-complete.md
        echo "" >> docs/integration-guides/mcp-integration-complete.md
        cat temp-sync/mcp-integration.md >> docs/integration-guides/mcp-integration-complete.md
        
        echo "✅ Processing use cases..."
        # Add Docusaurus front matter to use cases
        echo "---" > docs/examples/use-cases-complete.md
        echo "sidebar_position: 2" >> docs/examples/use-cases-complete.md
        echo "title: 'Complete Use Cases Guide'" >> docs/examples/use-cases-complete.md
        echo "---" >> docs/examples/use-cases-complete.md
        echo "" >> docs/examples/use-cases-complete.md
        cat temp-sync/use-cases.md >> docs/examples/use-cases-complete.md
        
        # Verify all synced files were created successfully
        if [ ! -f docs/specification/full-specification.md ]; then
          echo "❌ Failed to create full-specification.md"
          exit 1
        fi
        
        if [ ! -f docs/integration-guides/mcp-integration-complete.md ]; then
          echo "❌ Failed to create mcp-integration-complete.md"
          exit 1
        fi
        
        if [ ! -f docs/examples/use-cases-complete.md ]; then
          echo "❌ Failed to create use-cases-complete.md"
          exit 1
        fi
        
        # Cleanup
        rm -rf temp-sync
        echo "✅ Content sync completed - all files synced successfully"
    
    - name: Build website
      run: |
        echo "🏗️ Building Docusaurus website..."
        npm run build
        
        # Ensure CNAME file is in the build output for custom domain
        echo "uaicp.org" > build/CNAME
        echo "✅ Build completed with custom domain configured"
        
        # Debug: Show build directory contents
        echo "📁 Build directory contents:"
        ls -la build/
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Output deployment URL
      run: |
        echo "🚀 Site deployed to: ${{ steps.deployment.outputs.page_url }}"
        echo "🌐 Custom domain: https://uaicp.org"
